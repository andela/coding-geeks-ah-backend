{"version":3,"sources":["../src/index.js"],"names":["app","use","bodyParser","json","urlencoded","extended","get","req","res","status","message","error","next","PORT","process","env","db","sequelize","sync","alter","then","console","log","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAL,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AAEAD,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEM,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAArB;AACD,CAFD;AAIAV,GAAG,CAACC,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAc;AACpBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEM,IAAAA,MAAM,EAAE,GAAV;AAAeE,IAAAA,KAAK,EAAE;AAAtB,GAArB;AACD,CAFD;AAIAX,GAAG,CAACC,GAAJ,CAAQ,UAACU,KAAD,EAAQJ,GAAR,EAAaC,GAAb,EAAkBI,IAAlB,EAA2B;AACjCJ,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEM,IAAAA,MAAM,EAAE,GAAV;AAAeE,IAAAA,KAAK,EAAEA,KAAK,CAACD,OAA5B;AAAqCE,IAAAA,IAAI,EAAJA;AAArC,GAArB;AACD,CAFD;AAIA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAEAG,kBAAGC,SAAH,CAAaC,IAAb,CAAkB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAlB,EAAmCC,IAAnC,CAAwC,YAAM;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAtB,EAAAA,GAAG,CAACuB,MAAJ,CAAWV,IAAX,EAAiB,YAAM;AACrBQ,IAAAA,OAAO,CAACC,GAAR,qCAAyCT,IAAzC;AACD,GAFD;AAGD,CALD;;eAOeb,G","sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport db from './sequelize/models/index';\n\nconst app = express();\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\n\napp.use(morgan('dev'));\n\napp.get('/', (req, res) => {\n  res.status(200).json({ status: 200, message: 'Welcome to Authors Haven' });\n});\n\napp.use((req, res) => {\n  res.status(404).json({ status: 404, error: 'route not found' });\n});\n\napp.use((error, req, res, next) => {\n  res.status(500).json({ status: 500, error: error.message, next });\n});\n\nconst PORT = process.env.PORT || 3000;\n\ndb.sequelize.sync({ alter: true }).then(() => {\n  console.log('Database Connected!');\n  app.listen(PORT, () => {\n    console.log(`Server listening on port: ${PORT}`);\n  });\n});\n\nexport default app;\n"],"file":"index.js"}