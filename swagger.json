{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Authors Haven",
        "description": "Authors Haven is a social platform for the creative at heart. It is a platform where like minded authors can express themselves in writing",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "basePath": "/",
    "tags": [],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/": {
            "get": {
                "parameters": [],
                "tags": [
                    "Blog"
                ],
                "summary": "Welcome to Authors Haven",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "integer"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Create new user in system",
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "User that we want to create",
                    "schema": {
                        "required": [
                            "firstName",
                            "lastName",
                            "userName",
                            "email",
                            "password",
                            "confirmPassword"
                        ],
                        "properties": {
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "userName": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            },
                            "confirmPassword": {
                                "type": "string"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created new User",
                        "schema": {
                            "properties": {
                                "status": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "409": {
                        "description": "User already exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Login user in system",
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "User that we want to login",
                    "schema": {
                        "required": [
                            "email",
                            "password"
                        ],
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "password": {
                                "type": "string"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "data": {
                                    "$ref": "#/definitions/Login"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "401": {
                        "description": "Wrong login credentials",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/send-email": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Send email to the user",
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "User that want to reset password",
                    "schema": {
                        "required": [
                            "email"
                        ],
                        "properties": {
                            "email": {
                                "type": "string"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully email sent to user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "properties":{
                                "errors":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                }
            }
        },

        "/api/v1/reset-password/{token}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "User reset password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required":true,
                        "type":"string"
                    },
                    {
                    "name": "user",
                    "in": "body",
                    "description": "User that want to reset password",
                    "schema": {
                        "required": [
                            "password",
                            "confirmPassword"
                        ],
                        "properties": {
                            "password": {
                                "type": "string"
                            },
                            "confirmPassword": {
                                "type": "string"
                            }
                        }
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully user reset password",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/{username}/follow": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "User follow each other",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required":true,
                        "type":"string"
                    }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully follow user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/{username}/unfollow": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "description": "User unfollow each other",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required":true,
                        "type":"string"
                    }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Successfully unfollowed user",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/{username}/following": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "User can see a list of those he follows",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required":true,
                        "type":"string"
                    }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully retrieve the list followers",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/{username}/followers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "description": "User can see a list of those follow him",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "username",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required":true,
                        "type":"string"
                    }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully retrieve the list followers",
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing fields or invalid value",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },

                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/api/v1/verify-email/{token}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "User email verification link",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required":true,
                        "type":"string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                      "description": "Email verified successfully"
                    },
                    "403": {
                      "description": "Invalid token or signature"
                    }
                  }
                }
            },
      "/api/v1/profiles/{username}": {
        "put": {
          "tags": [
            "Profile"
          ],
          "summary": "update the user profile",
          "description": "update the user profile",
          "parameters": [
            {
                "name":"Authorization",
                "in": "header",
                "description" :"The user token",
                "required":true
              
              },
            {
              "name": "username",
              "in": "path",
              "description": "put your username here",
              "required":true,
              "type":"string"
            },
            {
                "name": "username",
                "in": "body",
                "paramType": "body",
                "dataType": "file",
                "schema": {
                  "$ref": "#/definitions/Profile"
                }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
                "description": "success: when a purchase order is sucessfully updated"
              },
              "404": {
                "description": "Error: user profile not found"
              },
              "403": {
                "description": "Error: forbiden"
              },
              "401": {
                "description": " Error: unauthorized"
              },
              "500": {
                "description": "Error: Server Error"
              }
          }
        },
        "get": {
            "tags": [
              "Profile"
            ],
            "summary": "get the user profile",
            "description": "get the user profile",
            "parameters": [
              {
                "name": "username",
                "in": "path",
                "description": "put your username here",
                "required":true,
                "type":"string"
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "200": {
                  "description": "success: when a purchase order is sucessfully updated"
                },
                "404": {
                  "description": "Error: user profile not found"
                },
                "401": {
                  "description": " unauthorized"
                },
                "500": {
                  "description": "Server Error"
                }
            }
          
        }
       },
        
       "/api/v1/profiles": {
        "get": {
            "tags": [
              "Profile"
            ],
            "summary": "All profiles",
            "description": "Fetch all user profiles",
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "User token",
                "required":false,
                "type":"string"
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
                "200": {
                    "description": "Successfully retrieved all profiles",
                    "schema": {
                        "properties": {
                            "status": {
                                "type": "integer"
                            },
                            "data": {
                                "type": "array",
                                "$ref": "#/definitions/Profile"
                            }
                        }
                    }
                },
                "401": {
                    "description": "User is not authenticated",
                    "schema": {
                        "properties": {
                            "error": {
                                "type": "string"
                            },
                            "me": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
          }
       }

        },
        
    "definitions": {
        "User": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string",
                    "uniqueItems": true
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                },
                "role": {
                    "type": "string"
                }

            }
        },

        "Profile": {
            "properties": {
                "username": {
                    "type":"string"
                },
                "bio": {
                    "type":"string"
                },
                "image": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "properties": {
                "token": {
                    "type": "string"
                },
                "userName": {
                    "type": "string",
                    "uniqueItems": true
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                }
        }
    },
        "Error": {
            "properties": {
                "status": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }

            }
        }
    }
    
}